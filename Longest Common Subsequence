#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void lcs(char *X, char *Y, int m, int n);
int max(int a, int b);
void main()
{char X[20],Y[20];
printf("Enter the path X : ");
gets(X);
printf("Enter the path Y : ");
gets(Y);
int m = strlen(X);
int n = strlen(Y);
lcs(X, Y, m, n);
}
void lcs(char *X, char *Y, int m, int n)
{
int L[m+1][n+1];
int i,j;
int index;
char lcs[10];
for(i=0;i<=m;i++)
{
for(j=0;j<=n;j++)
{
if(i == 0 || j == 0)
{
L[i][j] = 0;
}
else if(X[i-1] == Y[j-1])
{
L[i][j] = L[i-1][j-1] + 1;
}
else
{
L[i][j] = max(L[i-1][j],L[i][j-1]);
}
}
}
index = L[m][n];
lcs[index] = '\0';
i = m;
j = n;
while (i > 0 && j > 0)
{
if (X[i-1] == Y[j-1])
{
lcs[index-1] = X[i-1];
i--;
j--;
index--;
}
else if (L[i-1][j] > L[i][j-1])
{
i--;
}
else
{
j--;
}
}
printf("LCS of X and Y is : ");
puts(lcs);
printf("\nLCS table ... \n");
for(i=0;i<m;i++)
{
for(j=0;j<n;j++)
{
printf("\t%d",L[i][j]);
}
printf("\n");
}
printf("Length of LCS is : %d",strlen(lcs));
}
int max(int a,int b)
{
int max = a;
if(b>max)
{
max = b;
}
return max;
}
